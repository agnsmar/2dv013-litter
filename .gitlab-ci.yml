stages:          # List of stages for jobs, and their order of execution
  - test
  - build
  - staging
  - production

test: # temp job
  stage: test
  script:
    - echo 'testing'

build 1/6:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug 
    entrypoint: [""]
  script:  # See https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/services/client"  
      --dockerfile "${CI_PROJECT_DIR}/services/client/Dockerfile.production"
      --destination "${CI_REGISTRY_IMAGE}/client:${CI_COMMIT_TAG:-latest}"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:  # Include the job and set to when:manual if any of the follow paths match a modified file.
        - services/client/*

build 2/6:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug 
    entrypoint: [""]
  script:  # See https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/services/api-gateway"  
      --dockerfile "${CI_PROJECT_DIR}/services/api-gateway/Dockerfile.production"
      --destination "${CI_REGISTRY_IMAGE}/api-gateway:${CI_COMMIT_TAG:-latest}"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:  # Include the job and set to when:manual if any of the follow paths match a modified file.
        - services/api-gateway/*

build 3/6:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug 
    entrypoint: [""]
  script:  # See https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/services/auth"  
      --dockerfile "${CI_PROJECT_DIR}/services/auth/Dockerfile.production"
      --destination "${CI_REGISTRY_IMAGE}/auth:${CI_COMMIT_TAG:-latest}"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:  # Include the job and set to when:manual if any of the follow paths match a modified file.
        - services/auth/*
      
build 4/6:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug 
    entrypoint: [""]
  script:  # See https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/services/profile"  
      --dockerfile "${CI_PROJECT_DIR}/services/profile/Dockerfile.production"
      --destination "${CI_REGISTRY_IMAGE}/profile:${CI_COMMIT_TAG:-latest}"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:  # Include the job and set to when:manual if any of the follow paths match a modified file.
        - services/profile/*

build 5/6:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug 
    entrypoint: [""]
  script:  # See https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/services/lit"  
      --dockerfile "${CI_PROJECT_DIR}/services/lit/Dockerfile.production"
      --destination "${CI_REGISTRY_IMAGE}/lit:${CI_COMMIT_TAG:-latest}"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:  # Include the job and set to when:manual if any of the follow paths match a modified file.
        - services/lit/*

build 6/6:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug 
    entrypoint: [""]
  script:  # See https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/services/feed"  
      --dockerfile "${CI_PROJECT_DIR}/services/feed/Dockerfile.production"
      --destination "${CI_REGISTRY_IMAGE}/feed:${CI_COMMIT_TAG:-latest}"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:  # Include the job and set to when:manual if any of the follow paths match a modified file.
        - services/feed/*

# TODO - Change to Blue/Green
staging:
  stage: staging
  script:
    - echo 'deploying to staging'
  only:
    - main

# TODO - Change to Blue/Green
production:
  stage: production
  image:
    name: gcr.io/k8s-skaffold/skaffold:v2.0.0  # TODO - replace with a better Kubernetes image. Bitnami?
    entrypoint: ['']
  environment:
    name: production
    url: $PRODUCTION_URL # TODO - Set as environment variable. URL to your application. Ie HTTP://cscloud6-25.lnu.se
  when: manual # TODO - Make this not manual
  script:
    - kubectl config get-contexts
   # Configure kubectl to use our own k8s cluster, you need to setup an Gitlab agent in you k8s kluster
    - kubectl config use-context $K8S_CONTEXT
   # Authorize the cluster to pull images from our registry. (synced against Deploy Token "gitlab-deploy-token")
    - kubectl delete secret regcred || true
    - kubectl create secret docker-registry regcred --docker-server=$CI_REGISTRY --docker-username=$CI_DEPLOY_USER --docker-password=$CI_DEPLOY_PASSWORD

    - kubectl apply -f ./k8s/api-gateway.yaml -f .k8s/nginx-ingress.yaml # TODO - replace this with real services
     
  # Debugging outputs after completion
    - kubectl get deployments
    - kubectl get services
    - kubectl get pods
  only:
    - main  
    