type Query {
  profile(userid: String!): ProfileResponse!
  lits(userid: String!, offset: Int!, take: Int!): LitsResponse!
  isFollowing(userid: String!): Boolean!
}

type LitsResponse {
  data: [Lit]
  error: FollowError
}

type Mutation {
  follow(followeeId: String!): FollowResponse!
  unfollow(followeeId: String!): FollowResponse!
}

type FollowResponse {
  success: Boolean!
  error: FollowError
}

type FollowError {
  message: String!
}

type ProfileError {
  message: String!
}

type ProfileResponse {
  data: Profile
  error: ProfileError
}

type Profile {
  username: String!
  content: String
  avatar: String!
}

type Lit {
  content: String!
  created_at: String!
  updated_at: String
}